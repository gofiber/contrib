name: Golangci Lint Check

on:
  push:
    branches:
      - "master"
      - "main"
    paths-ignore:
      - "**.md"
      - LICENSE
      - ".github/ISSUE_TEMPLATE/*.yml"
      - ".github/dependabot.yml"
  pull_request:
    branches:
      - "*"
    paths-ignore:
      - "**.md"
      - LICENSE
      - ".github/ISSUE_TEMPLATE/*.yml"
      - ".github/dependabot.yml"

jobs:
  changes:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Generate filters
        id: filter-setup
        run: |
          filters=$(find v3 -mindepth 1 -maxdepth 1 -type d -exec basename {} \; | sort | awk '{printf "%s: \"v3/%s/**\"\n", $1, $1}')
          echo "filters<<EOF" >> $GITHUB_OUTPUT
          echo "$filters" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        shell: bash

      - name: Filter changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: ${{ steps.filter-setup.outputs.filters }}
    outputs:
      packages: ${{ steps.filter.outputs.changes || '[]' }}

  lint:
    needs: changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ${{ fromJSON(needs.changes.outputs.packages || '[]') }}
    if: ${{ needs.changes.outputs.packages != '[]' }}
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v5
      - uses: actions/setup-go@v5
        with:
            # NOTE: Keep this in sync with the version from go.mod
            go-version: "1.25.x"
            cache: false
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          args: "--tests=false --timeout=5m"
          working-directory: ./v3/${{ matrix.package }}
            # NOTE: Keep this in sync with the version from .golangci.yml
          version: v1.64.7
            # NOTE(ldez): temporary workaround
          install-mode: goinstall
